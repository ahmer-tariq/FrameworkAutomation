<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-FEV99MM" failures="1" tests="17" name="Default test" time="13.721" errors="0" timestamp="2023-06-13T20:46:58 PKT">
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="12.656">
    <failure type="java.lang.NullPointerException" message="null value in entry: url=null">
      <![CDATA[java.lang.NullPointerException: null value in entry: url=null
at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
at com.google.common.collect.SingletonImmutableBiMap.<init>(SingletonImmutableBiMap.java:43)
at com.google.common.collect.ImmutableBiMap.of(ImmutableBiMap.java:81)
at com.google.common.collect.ImmutableMap.of(ImmutableMap.java:128)
at org.openqa.selenium.remote.DriverCommand.GET(DriverCommand.java:187)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:297)
at base.Base.launchApplication(Base.java:46)
at testcases.Logintest.startup(Logintest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="@BeforeMethod startup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startup -->
  <testcase classname="testcases.Logintest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testcases.Logintest" name="validEmailAndValidPassword" time="0.001">
    <skipped/>
  </testcase> <!-- validEmailAndValidPassword -->
  <testcase classname="testcases.Logintest" name="validEmailAndInvalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- validEmailAndInvalidPassword -->
  <testcase classname="testcases.Logintest" name="invalidEmailValidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailValidPassword -->
  <testcase classname="testcases.Logintest" name="invalidEmailAndInvalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailAndInvalidPassword -->
  <testcase classname="testcases.Logintest" name="onlyValidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- onlyValidEmail -->
  <testcase classname="testcases.Logintest" name="onlyValidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- onlyValidPassword -->
  <testcase classname="testcases.Logintest" name="onlyInvalidAbnormalEmail" time="0.0">
    <skipped/>
  </testcase> <!-- onlyInvalidAbnormalEmail -->
  <testcase classname="testcases.Logintest" name="checkCrossEyeIcon" time="0.0">
    <skipped/>
  </testcase> <!-- checkCrossEyeIcon -->
  <testcase classname="testcases.Logintest" name="bothFieldsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- bothFieldsEmpty -->
  <testcase classname="testcases.Logintest" name="signInButton" time="0.0">
    <skipped/>
  </testcase> <!-- signInButton -->
  <testcase classname="testcases.Logintest" name="AbnormalEmailAndInvalidPassword" time="0.002">
    <skipped/>
  </testcase> <!-- AbnormalEmailAndInvalidPassword -->
  <testcase classname="testcases.Logintest" name="validCredentialsAndRefresh" time="0.001">
    <skipped/>
  </testcase> <!-- validCredentialsAndRefresh -->
  <testcase classname="testcases.Logintest" name="validCredentialsAndMoveToNewTab" time="0.0">
    <skipped/>
  </testcase> <!-- validCredentialsAndMoveToNewTab -->
  <testcase classname="testcases.Logintest" name="afterLoginAndLogoutGoBackVerifyTheLogoutSccessfull" time="0.0">
    <skipped/>
  </testcase> <!-- afterLoginAndLogoutGoBackVerifyTheLogoutSccessfull -->
  <testcase classname="testcases.Logintest" name="verifyURLBeforeAndAfterLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyURLBeforeAndAfterLogin -->
  <testcase classname="testcases.Logintest" name="verifyLoginWithValidCredentialsMultipleTimes" time="0.0">
    <failure type="java.lang.RuntimeException" message="java.lang.NullPointerException: Cannot invoke &amp;quot;org.apache.poi.xssf.usermodel.XSSFWorkbook.getSheet(String)&amp;quot; because &amp;quot;workbook&amp;quot; is null">
      <![CDATA[java.lang.RuntimeException: java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFWorkbook.getSheet(String)" because "workbook" is null
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:57)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
at org.testng.internal.Parameters.handleParameters(Parameters.java:803)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFWorkbook.getSheet(String)" because "workbook" is null
at utilities.Utilities.validDataSupplyEmailAndPassword(Utilities.java:114)
at testcases.Logintest.validEmailsAndPassword(Logintest.java:194)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:53)
... 25 more
]]>
    </failure>
  </testcase> <!-- verifyLoginWithValidCredentialsMultipleTimes -->
  <testcase classname="testcases.Logintest" name="loginWithValidCredentialsAndBackwardAndForward" time="0.001">
    <skipped/>
  </testcase> <!-- loginWithValidCredentialsAndBackwardAndForward -->
</testsuite> <!-- Default test -->
